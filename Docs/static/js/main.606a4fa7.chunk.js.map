{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","PropType","PropTypes","func","isRequired","getGifs","categorie","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","key","GifExperApp","i","ReactDOM","render","document","getElementById"],"mappings":"gPAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,QACpBR,GAAc,SAACS,GAAD,4BAAoBA,GAApB,CAAgCP,OAChDC,EAAc,MAKZ,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbrB,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,YAiB3BZ,EAAYe,SAAW,CACrBd,c,OAAee,EAAUC,KAAKC,Y,2BC1BnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UACpDH,GAFiB,+DAIII,MAAMF,GAJV,cAIbG,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,QACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAACoB,GAAc,IAAD,EACdtC,mBAAS,CAAEyB,KAAM,GAAIc,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KASxC,OANAC,qBAAU,WACNzB,EAAQqB,GAAUK,MAAK,SAACC,GAAD,OACrBH,EAAS,CAAEhB,KAAMmB,EAAML,SAAS,UAI/BC,EDPmBK,CAAa3B,GAA/BO,EADgC,EAChCA,KAAMc,EAD0B,EAC1BA,QAEd,OACE,oCACE,4BAAKrB,GACJqB,GAAW,0CACZ,yBAAKL,UAAU,aACZT,EAAKE,KAAI,SAACmB,GAAD,OACR,kBAAC,EAAD,eAAaC,IAAKD,EAAMjB,IAAQiB,UET7BE,EAAc,WAAO,IAAD,EACKhD,mBAAS,CAAC,cADf,mBACxBQ,EADwB,KACZT,EADY,KAG/B,OACE,oCACE,yCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACGS,EAAWmB,KAAI,SAACT,EAAW+B,GAC1B,OAAO,kBAAC,EAAD,CAAS/B,UAAWA,EAAW6B,IAAK,YAAcE,U,MCRnEC,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,W","file":"static/js/main.606a4fa7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length)\n      setCategories((categories) => [...categories, inputValue]);\n    setInputValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleChange} />\n    </form>\n  );\n};\n\nAddCategory.PropType = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (categorie) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n      categorie\n    )}&limit=10&api_key=pgzZS6THMgM7EgZ0wBOaDBoXDOYsL7Sn`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n    return gifs;\n  };\n","import React from \"react\";\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ categorie }) => {\n  const { data, loading } = useFetchGifs(categorie);\n\n  return (\n    <>\n      <h3>{categorie}</h3>\n      {loading && <p>Cargando...</p>}\n      <div className=\"card-grid\">\n        {data.map((image) => (\n          <GifGridItem key={image.id} {...image} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({ data: [], loading: true });\n\n  useEffect(() => {\n      getGifs(category).then((imgs) =>\n        setState({ data: imgs, loading: false })\n      );\n    });\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExperApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n\n  return (\n    <>\n      <h2>ExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((categorie, i) => {\n          return <GifGrid categorie={categorie} key={\"Categorie\" + i} />;\n        })}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GifExperApp } from \"./GifExperApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExperApp />, document.getElementById(\"root\"));"],"sourceRoot":""}